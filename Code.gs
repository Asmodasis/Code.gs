/*===============================================================================

FILE:              Code.gs

DESCRIPTION:       This is the script to send out listserv emails
                      when an employee requests time off

NOTES:             Google mail services allow only 100 emails to be sent per day
                     with four participants per log request there will be only
                     25 allowed requests per day. should suffice for most 
                     applications.
                     
                     The owner of the spreadsheet will get the email, but it
                     will be in the Sent Mail region of Gmail, move it to the 
                     inbox and it shall be there from then on.
                     However it will be marked read and may not be easily seen. 
  
EXPUNGING:          All portions of code with {DATA EXPUNGED}, has had sensitive 
	              information of which has been expunged for the privacy of 
                      those involved. 
          
UNKNOWN BEHAVIOUR: May occur when two or moreusers attempt to submit a request at the 
                     same time, requires further testing to confirm or deny. 

MODIFICATION HISTORY:

Author                  Date               Version
================================================================================
Shawn Ray       	    2018-05-31         Version 1.0 wrote the script
Shawn Ray       	    2018-06-02         Version 1.1 debugging/testing 
Shawn Ray       	    2018-06-02         Version 1.2 Added formatTime function
Shawn Ray       	    2018-06-02         Version 1.3 Added formatDate function
Shawn Ray       	    2018-06-03         Version 1.4 attempted to fix email to
                                                        self bug 
================================================================================*/

// Element 0 of the array should be the owner of the spreadsheet, used for authentication. 

// Email the Triumvirate :) and the listserv
var emailList = ['{DATA EXPUNGED}', '{DATA EXPUNGED}', '{DATA EXPUNGED}', '{DATA EXPUNGED}'];

var responseEmail = '{DATA EXPUNGED}';            // used for the response message


/*=============================================================================
FUNCTION:          sendEmailToTriumvirate()
DESCRIPTION:       Sends the emails to the specified email list
===============================================================================*/

function sendEmailToTriumvirate() {

                                                       // instantiate the form and get the sheet
  var form =  SpreadsheetApp.openById('{DATA EXPUNGED}').getActiveSheet(); 
                                                       // this ID is unique to each spreadsheet generated (hint look at URL)
  
                                                       // get the last row entry; or in essence, the most recent submission
  var rowData = form.getRange(form.getLastRow(), 1, 1, 5).getValues()[0]; 
  
  var longDate   = formatDate(new Date(rowData[2]));   // convert from ISO to long date format
  var startTime  = formatTime(new Date(rowData[3]));   // Starting time -- ISO to short
  var endTime    = formatTime(new Date(rowData[4]));   // Ending time   -- ISO to short
  
  

  var message = new String("\n\tGreetings Tutors!\n\n\t\t One of your coworker\'s, " + rowData[1] + " has requested time off on the date of "
                            + longDate + " The requested time is between " + startTime + " and " + endTime + "\n\t\t If you are able to cover"
                            + " some of all of this shift then please respond to " + responseEmail + ", and please do so as soon as possible." 
                            + "\n\t\t\tThis has been an autogenerated message, please do not respond this this message.\n\n\t\t\t\tThank you and "
                            + "have a wonderful day!!"
                          
                          );
  
  
  for(var i = 0; i < emailList.length; i++){
           
     MailApp.sendEmail(
      {
        to:        emailList[0] + ', ' + emailList[i] ,
        subject:   'Requested Time Off' ,
        body:      message ,
        options:
        {
          noReply:   true,
     
         }
    
       }
     );
    
    }
   
    SpreadsheetApp.flush(); 
  
}

/*=============================================================================
FUNCTION:          formatTime(t)
DESCRIPTION:       formats the time with 12 hour dial setting
PARAMETERS:        t is the time that is being converted { Date object }
===============================================================================*/

function formatTime(t){
  
  if(t.getHours() > 12){                              // PM mode       
      if(t.getMinutes() == t.getSeconds() && t.getSeconds() == 0){
          return ((((t.getHours()  + 11) % 12 + 1)).toString() + ':' + t.getMinutes().toString() + t.getSeconds().toString() + ' PM ' );
      }else{
          return ((((t.getHours()  + 11) % 12 + 1)).toString() + ':' + (t.getMinutes() + t.getSeconds()).toString() + ' PM ' );
  }
  }else{                                              // AM mode
      if(t.getMinutes() == t.getSeconds() && t.getSeconds() == 0){
          return (t.getHours().toString() + ':' + t.getMinutes().toString() + t.getSeconds().toString() + ' AM ' );
      }else{
          return (t.getHours().toString() + ':' + (t.getMinutes() + t.getSeconds()).toString() + ' AM ' );
  }
  
 }
}

/*=============================================================================
FUNCTION:          formatDate(t)
DESCRIPTION:       formats the date to long format from ISO
PARAMETERS:        t is the date that is being converted { Date object }
===============================================================================*/

function formatDate(t){
  
   var monthNames = [
                      "January", "February", "March",
                      "April", "May", "June", "July",
                      "August", "September", "October",
                      "November", "December"
                     ];

  return (monthNames[t.getMonth()] + ' ' + t.getDate()  + ' ' + t.getFullYear());
  
}